@page "/book"
@page "/book/{id:guid}"
@using Models;
@inject NavigationManager NavigationManager;

<PageTitle>@title</PageTitle>
<h1>Book Catalog</h1>
<h3>@title</h3>

@if (book is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-sm-4">

            <EditForm Model="@book" OnValidSubmit="HandleSubmit">
                
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="book.Name" class="form-control"></InputText>
                </div>

                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="book.Genre" class="form-select">
                        <option value="">Select Genre</option>
                        <option value="Novel">Novel</option>
                        <option value="Horror">Horror</option>
                        <option value="Science Fiction">Science Fiction</option>
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="book.Price" class="form-control"></InputNumber>
                </div>

                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date:</label>
                    <InputDate id="releaseDate" @bind-Value="book.ReleaseDate" class="form-control"></InputDate>
                </div>
                
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>

            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid? Id { get; set; }

    private Book? book;

    private string title = string.Empty;

    private static Guid defaultId = new Guid("00000000-0000-0000-0000-000000000000");

    protected override void OnParametersSet()
    {
        if (Id is not null)
        {
            Book foundBook = BookClient.GetBook(Id.Value);
            
            book = new()
            {
                Id = foundBook.Id,
                Name = foundBook.Name,
                Genre = foundBook.Genre,
                Price = foundBook.Price,
                ReleaseDate = foundBook.ReleaseDate
            };

            title = $"Edit {book.Name}";
        }
        else
        {
            book = new()
            {
                Name = string.Empty,
                Genre = string.Empty,
                ReleaseDate = DateTime.UtcNow
            };

            title = "New book";
        }
    }

    private void HandleSubmit()
    {
        if (book!.Id == defaultId)
        {
            BookClient.AddBook(book);
        }
        else
        {
            BookClient.UpdateBook(book);
        }

        NavigationManager.NavigateTo("/");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
